const movieService = require('../services/movieService');

// üé¨ L·∫•y danh s√°ch phim m·ªõi c·∫≠p nh·∫≠t
async function getMovies(req, res) {
  const page = parseInt(req.query.page) || 1;
  const movies = await movieService.fetchNewMovies(page);
  if (!movies || !movies.length)
    return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y phim n√†o' });

  res.json({
    page,
    total: movies.length,
    movies,
  });
}

// üé• Chi ti·∫øt phim theo slug
async function getMovieDetail(req, res) {
  const { slug } = req.params;
  const movie = await movieService.fetchMovieDetail(slug);
  if (!movie) return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y phim' });

  const videoUrl = await movieService.getVideoUrl(slug, 1);

  res.json({
    slug,
    title: movie.movie?.name || movie.name,
    description: movie.movie?.content || movie.content,
    year: movie.movie?.year || movie.year,
    poster_url: movie.movie?.thumb_url || movie.poster_url,
    videoUrl,
  });
}

// üéûÔ∏è L·∫•y link video theo slug + t·∫≠p
async function getMovieVideo(req, res) {
  const { slug } = req.params;
  const episode = req.query.episode || 1;
  const url = await movieService.getVideoUrl(slug, episode);
  if (!url)
    return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y link video' });

  res.json({ slug, episode, videoUrl: url });
}

// üîñ L·∫•y phim theo type (phim-le, phim-bo, hoat-hinh...)
async function getMoviesByType(req, res) {
  const { type } = req.params;
  const movies = await movieService.fetchMoviesByType(type, req.query);
  if (!movies || !movies.length)
    return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y phim theo type' });
  res.json({ type, movies });
}

// üîç T√¨m ki·∫øm phim
async function searchMovies(req, res) {
  const keyword = req.query.q || req.query.keyword;
  if (!keyword)
    return res.status(400).json({ message: 'Thi·∫øu t·ª´ kh√≥a t√¨m ki·∫øm (q)' });

  const movies = await movieService.searchMovies(keyword, req.query);
  if (!movies || !movies.length)
    return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y phim ph√π h·ª£p' });
  res.json({ keyword, movies });
}

// üóÇÔ∏è Danh s√°ch th·ªÉ lo·∫°i phim
async function getCategories(req, res) {
  const categories = await movieService.fetchCategories();
  if (!categories || !categories.length)
    return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y th·ªÉ lo·∫°i phim' });
  res.json(categories);
}

// üé≠ L·∫•y phim theo th·ªÉ lo·∫°i
async function getMoviesByCategory(req, res) {
  const { category } = req.params;
  const movies = await movieService.fetchMoviesByCategory(category, req.query);
  if (!movies || !movies.length)
    return res
      .status(404)
      .json({ message: `Kh√¥ng t√¨m th·∫•y phim trong th·ªÉ lo·∫°i ${category}` });
  res.json({ category, movies });
}

// üåç Danh s√°ch qu·ªëc gia
async function getCountries(req, res) {
  const countries = await movieService.fetchCountries();
  if (!countries || !countries.length)
    return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y danh s√°ch qu·ªëc gia' });
  res.json(countries);
}

// üáªüá≥ L·∫•y phim theo qu·ªëc gia
async function getMoviesByCountry(req, res) {
  const { country } = req.params;
  const movies = await movieService.fetchMoviesByCountry(country, req.query);
  if (!movies || !movies.length)
    return res
      .status(404)
      .json({ message: `Kh√¥ng t√¨m th·∫•y phim theo qu·ªëc gia ${country}` });
  res.json({ country, movies });
}

// üìÖ L·∫•y phim theo nƒÉm
async function getMoviesByYear(req, res) {
  const { year } = req.params;
  const movies = await movieService.fetchMoviesByYear(year, req.query);
  if (!movies || !movies.length)
    return res
      .status(404)
      .json({ message: `Kh√¥ng t√¨m th·∫•y phim ph√°t h√†nh nƒÉm ${year}` });
  res.json({ year, movies });
}

module.exports = {
  getMovies,
  getMovieDetail,
  getMovieVideo,
  getMoviesByType,
  searchMovies,
  getCategories,
  getMoviesByCategory,
  getCountries,
  getMoviesByCountry,
  getMoviesByYear,
};
